Javaで有名もしくは自身で興味のあるフレームワークを3つ以上調べ、そのフレームワークの特徴をまとめて記述しましょう。
※調査内容に規定はありませんが、導入の方法や使い方、特徴など、オリジナルサイトに利用するつもりで調べてみましょう。
※MVCモデルは開発現場では前提知識として知っていて欲しいという知識なので、自分で腑に落ちて納得できるよう仕組みを理解しておきましょう。


①Ruby on Rails
RubyのWEBフレームワーク
オープンソース
プロトタイプ作成が容易
開発スピードが速い、柔軟な機能追加を行える
言語自体が書きやすく、初心者向き
Rubyで書くより格段に少ないコードで書ける
Ruby on Railsは自由度の高いRubyより細かくルールが決まっており、その通りに書けば簡単にアプリケーションが作れる
Webアプリケーション開発、スマホアプリの開発やゲーム開発
開発時間が短く、サービスの成長に対して柔軟な対応が可能
SQLが書けなくても直感的にデータベース操作ができる
テストを自動化できる
日本語サイトが豊富


②CakePHP
PHPのWEBフレームワーク
オープンソース
プロトタイプの作成が容易
Ruby on Railsの概念を多く取り入れている
PHP開発者がだれでも素早く快適に開発を行えることを目標に生み出された
プロトタイピング型フレームワーク
O/Rマッピング・・・PHP上のオブジェクトとDBを関連付けする仕掛け
scaffolding機能・・・簡単なコントローラを用意するだけでテーブルの一覧・追加・削除・編集が簡単に実装できる
bakeコマンドによるプログラム自動生成機能・・・bakeコマンド実行で対話的に必要情報を入力し、MVCモデルに沿ってPHPプログラムを自動生成できる


③Spring
javaのWEBフレームワーク
オープンソース
部分的もしくは大部分のシステムをSpring Frameworkで構築することも可能
DI（依存性の注入）と呼ばれる仕組みが導入されている。依存性のあるプログラムは外部から取り入れるようになっているので、一つ一つのプログラムを独立させやすくなっている。
Spring　MVC Testという専用のテストプログラムがある　※一連の動作を見る結合テストを行う。
フレームワークの基本的な機能の大部分がインターフェースとして提供されているので、拡張性が高い
AOP（アスペクト指向プログラミング）を用いることができる。本質的な処理をクラスに書き、本質的ではない処理（共通化できる処理）は別に書くことで、共通のプログラムをまとめやすくでき、再利用することも容易となる。














